generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Link {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  url          String
  key          String    @unique
  password     String? // Optional password protection (hashed)
  geoTargeting Json? // Optional geo targeting rules: { "US": "https://us.example.com", "GB": "https://uk.example.com" }
  expiresAt    DateTime? // Optional expiration date
  createdAt    DateTime  @default(now())
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("links")
}

model User {
  id        String   @id @map("_id")
  createdAt DateTime
  updatedAt DateTime

  name          String
  email         String  @unique
  emailVerified Boolean
  image         String?

  sessions Session[]
  accounts Account[]
  Link     Link[]

  @@map("users")
}

model Session {
  id        String   @id @map("_id")
  createdAt DateTime
  updatedAt DateTime
  expiresAt DateTime
  token     String   @unique
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Account {
  id                    String    @id @map("_id")
  createdAt             DateTime
  updatedAt             DateTime
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("accounts")
}

model Verification {
  id         String    @id @map("_id")
  createdAt  DateTime?
  updatedAt  DateTime?
  identifier String
  value      String
  expiresAt  DateTime

  @@map("verifications")
}
